[{"C:\\Users\\Stashchuk\\WebstormProjects\\online-store-course\\client\\src\\index.js":"1","C:\\Users\\Stashchuk\\WebstormProjects\\online-store-course\\client\\src\\App.js":"2","C:\\Users\\Stashchuk\\WebstormProjects\\online-store-course\\client\\src\\store\\DeviceStore.js":"3","C:\\Users\\Stashchuk\\WebstormProjects\\online-store-course\\client\\src\\store\\UserStore.js":"4","C:\\Users\\Stashchuk\\WebstormProjects\\online-store-course\\client\\src\\components\\FirstScreen.js":"5","C:\\Users\\Stashchuk\\WebstormProjects\\online-store-course\\client\\src\\components\\NavBar.js":"6","C:\\Users\\Stashchuk\\WebstormProjects\\online-store-course\\client\\src\\components\\WtfNav.js":"7","C:\\Users\\Stashchuk\\WebstormProjects\\online-store-course\\client\\src\\components\\AppRouter.js":"8","C:\\Users\\Stashchuk\\WebstormProjects\\online-store-course\\client\\src\\components\\Footer.js":"9","C:\\Users\\Stashchuk\\WebstormProjects\\online-store-course\\client\\src\\http\\userAPI.js":"10","C:\\Users\\Stashchuk\\WebstormProjects\\online-store-course\\client\\src\\components\\Services.js":"11","C:\\Users\\Stashchuk\\WebstormProjects\\online-store-course\\client\\src\\routes.js":"12","C:\\Users\\Stashchuk\\WebstormProjects\\online-store-course\\client\\src\\http\\index.js":"13","C:\\Users\\Stashchuk\\WebstormProjects\\online-store-course\\client\\src\\pages\\ServicePage.js":"14","C:\\Users\\Stashchuk\\WebstormProjects\\online-store-course\\client\\src\\utils\\consts.js":"15","C:\\Users\\Stashchuk\\WebstormProjects\\online-store-course\\client\\src\\pages\\Admin.js":"16","C:\\Users\\Stashchuk\\WebstormProjects\\online-store-course\\client\\src\\pages\\Basket.js":"17","C:\\Users\\Stashchuk\\WebstormProjects\\online-store-course\\client\\src\\pages\\DevicePage.js":"18","C:\\Users\\Stashchuk\\WebstormProjects\\online-store-course\\client\\src\\pages\\Auth.js":"19","C:\\Users\\Stashchuk\\WebstormProjects\\online-store-course\\client\\src\\pages\\Project.js":"20","C:\\Users\\Stashchuk\\WebstormProjects\\online-store-course\\client\\src\\pages\\Shop.js":"21","C:\\Users\\Stashchuk\\WebstormProjects\\online-store-course\\client\\src\\pages\\About.js":"22","C:\\Users\\Stashchuk\\WebstormProjects\\online-store-course\\client\\src\\pages\\Facilities.js":"23","C:\\Users\\Stashchuk\\WebstormProjects\\online-store-course\\client\\src\\pages\\Contact.js":"24","C:\\Users\\Stashchuk\\WebstormProjects\\online-store-course\\client\\src\\components\\BrandBarAlt.js":"25","C:\\Users\\Stashchuk\\WebstormProjects\\online-store-course\\client\\src\\components\\ContactForm.js":"26","C:\\Users\\Stashchuk\\WebstormProjects\\online-store-course\\client\\src\\components\\modals\\DeleteType.js":"27","C:\\Users\\Stashchuk\\WebstormProjects\\online-store-course\\client\\src\\components\\modals\\CreateBrand.js":"28","C:\\Users\\Stashchuk\\WebstormProjects\\online-store-course\\client\\src\\components\\modals\\CreateDevice.js":"29","C:\\Users\\Stashchuk\\WebstormProjects\\online-store-course\\client\\src\\components\\modals\\CreateType.js":"30","C:\\Users\\Stashchuk\\WebstormProjects\\online-store-course\\client\\src\\components\\Map.js":"31","C:\\Users\\Stashchuk\\WebstormProjects\\online-store-course\\client\\src\\http\\deviceApi.js":"32","C:\\Users\\Stashchuk\\WebstormProjects\\online-store-course\\client\\src\\components\\Pages.js":"33","C:\\Users\\Stashchuk\\WebstormProjects\\online-store-course\\client\\src\\components\\DeviceList.js":"34","C:\\Users\\Stashchuk\\WebstormProjects\\online-store-course\\client\\src\\components\\BrandBar.js":"35","C:\\Users\\Stashchuk\\WebstormProjects\\online-store-course\\client\\src\\components\\TypeBar.js":"36","C:\\Users\\Stashchuk\\WebstormProjects\\online-store-course\\client\\src\\components\\DeviceItem.js":"37"},{"size":1060,"mtime":1695819560354,"results":"38","hashOfConfig":"39"},{"size":2180,"mtime":1695819418201,"results":"40","hashOfConfig":"39"},{"size":2550,"mtime":1695154880219,"results":"41","hashOfConfig":"39"},{"size":1015,"mtime":1694961999264,"results":"42","hashOfConfig":"39"},{"size":430,"mtime":1694989484713,"results":"43","hashOfConfig":"39"},{"size":4505,"mtime":1694983585873,"results":"44","hashOfConfig":"39"},{"size":4788,"mtime":1695925474271,"results":"45","hashOfConfig":"39"},{"size":2181,"mtime":1695979528137,"results":"46","hashOfConfig":"39"},{"size":3129,"mtime":1695926240514,"results":"47","hashOfConfig":"39"},{"size":2325,"mtime":1695888919199,"results":"48","hashOfConfig":"39"},{"size":6165,"mtime":1695985925382,"results":"49","hashOfConfig":"39"},{"size":4034,"mtime":1695925424293,"results":"50","hashOfConfig":"39"},{"size":1972,"mtime":1694958953297,"results":"51","hashOfConfig":"39"},{"size":10436,"mtime":1696016729349,"results":"52","hashOfConfig":"39"},{"size":1555,"mtime":1695925419371,"results":"53","hashOfConfig":"39"},{"size":3523,"mtime":1695848666502,"results":"54","hashOfConfig":"39"},{"size":155,"mtime":1692792521499,"results":"55","hashOfConfig":"39"},{"size":5075,"mtime":1695898746946,"results":"56","hashOfConfig":"39"},{"size":4919,"mtime":1694962170890,"results":"57","hashOfConfig":"39"},{"size":2700,"mtime":1696107444831,"results":"58","hashOfConfig":"39"},{"size":5682,"mtime":1695832924550,"results":"59","hashOfConfig":"39"},{"size":10242,"mtime":1695905943557,"results":"60","hashOfConfig":"39"},{"size":6192,"mtime":1695925146882,"results":"61","hashOfConfig":"39"},{"size":1446,"mtime":1695925791610,"results":"62","hashOfConfig":"39"},{"size":2213,"mtime":1696107682641,"results":"63","hashOfConfig":"39"},{"size":2643,"mtime":1695833126559,"results":"64","hashOfConfig":"39"},{"size":3271,"mtime":1694977199714,"results":"65","hashOfConfig":"39"},{"size":3507,"mtime":1694897659184,"results":"66","hashOfConfig":"39"},{"size":10099,"mtime":1695164659855,"results":"67","hashOfConfig":"39"},{"size":2715,"mtime":1694902194944,"results":"68","hashOfConfig":"39"},{"size":852,"mtime":1695662318392,"results":"69","hashOfConfig":"39"},{"size":4324,"mtime":1695848172481,"results":"70","hashOfConfig":"39"},{"size":2251,"mtime":1696192579169,"results":"71","hashOfConfig":"39"},{"size":1625,"mtime":1695664603068,"results":"72","hashOfConfig":"39"},{"size":2203,"mtime":1695901344185,"results":"73","hashOfConfig":"39"},{"size":2024,"mtime":1694978831767,"results":"74","hashOfConfig":"39"},{"size":1898,"mtime":1695926287949,"results":"75","hashOfConfig":"39"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1wj72jp",{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117"},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122"},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125"},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130"},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135"},{"filePath":"136","messages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142"},{"filePath":"143","messages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145"},{"filePath":"146","messages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150"},{"filePath":"151","messages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157"},{"filePath":"158","messages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160"},{"filePath":"161","messages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"163","messages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165"},"C:\\Users\\Stashchuk\\WebstormProjects\\online-store-course\\client\\src\\index.js",[],"C:\\Users\\Stashchuk\\WebstormProjects\\online-store-course\\client\\src\\App.js",["166","167","168","169"],"import React, {useContext, useEffect, useState} from 'react';\nimport {BrowserRouter} from \"react-router-dom\"; // Імпорт бібліотеки для маршрутизації.\nimport AppRouter from \"./components/AppRouter\"; // Імпорт компонента для маршрутизації.\nimport NavBar from \"./components/NavBar\"; // Імпорт компонента навігаційного меню.\nimport {observer} from \"mobx-react-lite\"; // Імпорт бібліотеки для роботи з обсервером.\nimport {Context} from \"./index\"; // Імпорт контексту додатку.\nimport {check} from \"./http/userAPI\";\nimport WtfNav from \"./components/WtfNav\";\nimport FirstScreen from \"./components/FirstScreen\";\nimport Footer from \"./components/Footer\"; // Імпорт функції для перевірки авторизації користувача.\n\nconst App = observer(() => {\n    const {user} = useContext(Context); // Отримання контексту додатку.\n    const [loading, setLoading] = useState(true); // Стан для відстеження завантаження додатку.\n\n    useEffect(() => {\n        // Виконання перевірки авторизації користувача під час завантаження додатку.\n        check().then(data => {\n            user.setUser(true); // Встановлення інформації про користувача в контексті.\n            user.setIsAuth(true); // Позначення користувача як авторизованого.\n        }).finally(() => setLoading(false)); // Завершення завантаження та встановлення статусу завершення.\n    }, []);\n\n    return (\n        <BrowserRouter>\n            <WtfNav/>\n            {/*<NavBar /> /!* Відображення навігаційного меню. *!/*/}\n\n            <AppRouter /> {/* Відображення основного контенту додатку на основі маршрутів. */}\n\n            <Footer />\n        </BrowserRouter>\n    );\n});\n\nexport default App;\n","C:\\Users\\Stashchuk\\WebstormProjects\\online-store-course\\client\\src\\store\\DeviceStore.js",[],"C:\\Users\\Stashchuk\\WebstormProjects\\online-store-course\\client\\src\\store\\UserStore.js",[],"C:\\Users\\Stashchuk\\WebstormProjects\\online-store-course\\client\\src\\components\\FirstScreen.js",["170"],"import React from 'react';\r\nimport '../css/WtfNav.css';\r\nimport logo from '../assets/Kronk.svg';  // Імпортуємо зображення для відображення рейтингу.\r\n\r\nconst FirstScreen = () => {\r\n    return (\r\n        <div className=\"first-screen\">\r\n\r\n            <img className=\"d-flex \"\r\n            src={logo}\r\n            />\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FirstScreen;","C:\\Users\\Stashchuk\\WebstormProjects\\online-store-course\\client\\src\\components\\NavBar.js",[],"C:\\Users\\Stashchuk\\WebstormProjects\\online-store-course\\client\\src\\components\\WtfNav.js",["171","172","173","174","175","176"],"import React, {useContext} from 'react';\r\nimport '../css/WtfNav.css';\r\nimport navKronk from '../assets/NavKronk.png';  // Імпортуємо зображення для відображення рейтингу.\r\nimport {Button, Form, FormControl, Nav, Navbar, NavDropdown} from \"react-bootstrap\";\r\nimport bigStar from \"../assets/bigStar.png\";\r\nimport {\r\n    ABOUT_ROUTE,\r\n    ADMIN_ROUTE,\r\n    CONTACT_ROUTE,\r\n    FACILITIES_ROUTE,\r\n    LOGIN_ROUTE,\r\n    PROJECTS_ROUTE,\r\n    SHOP_ROUTE\r\n} from \"../utils/consts\";\r\nimport {observer} from \"mobx-react-lite\";\r\nimport {Context} from \"../index\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport jwt_decode from \"jwt-decode\"; // Import your CSS file // <Navbar fixed=\"top\" >\r\n\r\n\r\nconst WtfNav = observer(() => {\r\n    const { user } = useContext(Context);  // Отримуємо дані про користувача з контексту додатка.\r\n    const history = useHistory();  // Отримуємо історію браузера для переходу до інших сторінок.\r\n\r\n    const token = localStorage.getItem('token'); // Отримуємо JWT-токен з localStorage\r\n    const decodedToken = jwt_decode(token); // Декодуємо JWT-токен\r\n    const userRole = decodedToken.role; // Отримуємо роль користувача з декодованого токена\r\n\r\n\r\n    const logOut = () => {  // Функція для виходу користувача.\r\n        user.setUser({});  // Очищаємо дані користувача в контексті.\r\n        user.setIsAuth(false);  // Встановлюємо флаг авторизації в `false`.\r\n    }\r\n\r\n    return (\r\n        <Navbar sticky=\"top\" className=\"bg-black navbar-dark\" expand=\"lg\">\r\n            <Navbar.Brand href={SHOP_ROUTE}>\r\n                <img\r\n                    src={navKronk}\r\n                    width=\"45\"\r\n                    height=\"40\"\r\n                    className=\"d-inline-block align-top\"\r\n                    alt=\"KronkStroy\"\r\n                />\r\n            </Navbar.Brand>\r\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n            <Navbar.Collapse className=\"justify-content-end\" id=\"basic-navbar-nav\">\r\n                <Nav className=\"ml-auto\">\r\n                    <Nav.Link onClick={() => history.push(SHOP_ROUTE)}>Головна</Nav.Link>\r\n                    <Nav.Link onClick={() => history.push(ABOUT_ROUTE)}>Про нас</Nav.Link>\r\n                    <Nav.Link onClick={() => history.push(PROJECTS_ROUTE)} >Проекти</Nav.Link>\r\n                    <Nav.Link onClick={() => history.push(FACILITIES_ROUTE)}>Послуги</Nav.Link>\r\n                    <Nav.Link onClick={() => history.push(CONTACT_ROUTE)}>Контакти</Nav.Link>\r\n                    {user.isAuth ?  // Умова для перевірки, чи користувач авторизований\r\n                        <Nav className=\"ml-auto\" style={{ color: 'white' }}>  {/* Навігаційне меню, розташоване праворуч */}\r\n                            {userRole === 'ADMIN' && user.isAuth ? (\r\n                                // Відображаємо кнопку адмін-панелі тільки для адміністраторів, які авторизовані\r\n                                <Nav.Link\r\n                                    variant={\"outline-light\"}\r\n                                    onClick={() => history.push(ADMIN_ROUTE)}  /* Перехід на сторінку адміністратора */\r\n                                >\r\n                                    Адмін Панель\r\n                                </Nav.Link>\r\n                            ) : null}\r\n                            <Nav.Link variant={\"outline-light\"}\r\n                                    onClick={() => logOut()}  // Виклик функції для виходу користувача\r\n                                    className=\"ml-2\"  // Відступ для другої кнопки\r\n                            >\r\n                                Вийти\r\n                            </Nav.Link>\r\n                        </Nav>\r\n                        :\r\n                        <Nav className=\"ml-auto\" style={{ color: 'white' }}>  {/* Навігаційне меню для гостей */}\r\n                            {/*<Nav.Link variant={\"outline-light\"} onClick={() => history.push(LOGIN_ROUTE)}>Авторизація</Nav.Link>  /!* Перехід на сторінку авторизації *!/*/}\r\n                        </Nav>\r\n                    }\r\n                </Nav>\r\n\r\n\r\n\r\n            </Navbar.Collapse>\r\n        </Navbar>\r\n    );\r\n});\r\n\r\nexport default WtfNav;\r\n","C:\\Users\\Stashchuk\\WebstormProjects\\online-store-course\\client\\src\\components\\AppRouter.js",[],"C:\\Users\\Stashchuk\\WebstormProjects\\online-store-course\\client\\src\\components\\Footer.js",["177","178","179","180","181"],"import React from 'react';\r\nimport '../css/Footer.css';\r\nimport '../css/index.css';\r\nimport logo from '../assets/Kronk.svg';  // Імпортуємо зображення для відображення рейтингу.\r\nimport inst from '../assets/icons8-instagram-250.png';  // Імпортуємо зображення для відображення рейтингу.\r\nimport face from '../assets/icons8-facebook-250.png';\r\nimport {ABOUT_ROUTE, CONTACT_ROUTE, FACILITIES_ROUTE, PROJECTS_ROUTE, SHOP_ROUTE} from \"../utils/consts\";\r\nimport {useHistory} from \"react-router-dom\";  // Імпортуємо зображення для відображення рейтингу.\r\n\r\n\r\n\r\nfunction Footer() {\r\n\r\n    const history = useHistory();  // Отримуємо історію браузера для переходу до інших сторінок.\r\n\r\n    return (\r\n        <footer>\r\n        <div className=\"footer cont\">\r\n            <div className=\"footer-imgs\">\r\n                <div>\r\n                    <p className=\"img-footer\">\r\n                        <a href=\"index.html\"><img src={logo} alt=\"Kronk Logo\" /></a>\r\n                    </p>\r\n                </div>\r\n                <div className=\"imgs-footer\">\r\n                    <a href=\"https://www.facebook.com/KronkStroyFacade/\">\r\n                        <img src={face} alt=\"Facebook Icon\" />\r\n                    </a>\r\n                    <a href=\"https://www.instagram.com/kronkstroy/\">\r\n                        <img src={inst} alt=\"Instagram Icon\" />\r\n                    </a>\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <div className=\"footer-text\">\r\n                    <h3>Навігація</h3>\r\n                    <hr className=\"super-hr\" />\r\n                </div>\r\n                <div className=\"footer-bar\">\r\n                    <a href=\"#\" onClick={() => history.push(SHOP_ROUTE)}>Головна</a>\r\n                    <a href=\"#\" onClick={() => history.push(ABOUT_ROUTE)}>Про нас </a>\r\n                    <a href=\"#\" onClick={() => history.push(PROJECTS_ROUTE)}>Проекти</a>\r\n                    <a href=\"#\" onClick={() => history.push(FACILITIES_ROUTE)}>Послуги</a>\r\n                    <a href=\"#\" onClick={() => history.push(CONTACT_ROUTE)}>Контакти</a>\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <div className=\"footer-text\">\r\n                    <h3>Локація</h3>\r\n                    <hr className=\"super-hr\" />\r\n                    <h4>м. Дніпро, Вул. Академика Белелюбского (бывш. Краснозаводская) Дом №54-а</h4>\r\n                    <h4>\r\n                        +38 056 736-30-55\r\n                        <br />\r\n                        +38 096 692-64-53\r\n                    </h4>\r\n                    <h4>kronkstroy@gmail.com</h4>\r\n                </div>\r\n            </div>\r\n        </div>\r\n            <div className=\"footer-down\">\r\n                <p>© 2022, Kronk Stroy Systems</p>\r\n            </div>\r\n\r\n        </footer>\r\n    );\r\n}\r\n\r\nexport default Footer;\r\n","C:\\Users\\Stashchuk\\WebstormProjects\\online-store-course\\client\\src\\http\\userAPI.js",[],"C:\\Users\\Stashchuk\\WebstormProjects\\online-store-course\\client\\src\\components\\Services.js",["182","183","184","185","186"],"import React from 'react';\r\nimport {Button} from \"react-bootstrap\";\r\nimport '../css/Service.css';\r\nimport '../css/index.css';\r\nimport block from \"../assets/image-2.1-min.jpg\";\r\nimport block2 from \"../assets/image-4.5-min.jpg\";\r\nimport block3 from \"../assets/image-5.2-min.jpg\";\r\nimport block4 from \"../assets/image-min.jpg\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\nconst Services = () => {\r\n\r\n    return (\r\n       <div className=\"services\" >\r\n           <article className=\"block-white\" style={{ backgroundImage: `url(${block})`}}>\r\n               <div className=\"\">\r\n                   <h3>РЕКЛАМНІ КОНСТРУКЦІЇ</h3>\r\n                   <hr className=\"super-hr\"/>\r\n                   <h4>Ми надаємо повний цикл виготовлення вивісок, починаючи від дизайн-проекту до монтажу на об`єкті. Сучасні технології освітлення та виробництва елементів зовнішньої реклами, а також багаторічний досвід дозволяють нам виготовляти найбільш якісну привабливу та енергоощадну зовнішню рекламу.</h4>\r\n                   {/*<button className=\"service-button text-black\">Переглянути детальніше</button>*/}\r\n                   <button className=\"service-button text-black\">\r\n                       <Link to={`/service/${0}`} style={{ color: \"inherit\", textDecoration: \"none\" }}>Переглянути детальніше</Link>\r\n                   </button>\r\n               </div>\r\n\r\n               <div className=\"photo-columns\">\r\n                   <img src={block} />\r\n               </div>\r\n\r\n           </article>\r\n           <article className=\"block-black\" style={{ backgroundImage: `url(${block2})`}}>\r\n\r\n               <div className=\"\">\r\n                   <h3>ФАСАДИ З КОРТЕН СТАЛИ</h3>\r\n                   <hr className=\"super-hr\"/>\r\n                   <h4>Кортен-сталь, сталь Кортен, Cor-Ten steel, просто Кортен. Називайте як хочете, але суті справи це не змінює. Зіткнулися з цим матеріалом років 12-15 тому, точно вже не згадаю. Так і головне, що побачив її перший раз не на фасаді, і не на пам`ятнику, а на кораблі. Кажу тоді товаришу, мовляв, що це за корабель такий — мотлох якийсь іржавий. На що у відповідь почув, що я неосвічений тип і багато чого цікавого дізнався і про себе, а головне і про Кортена…</h4>\r\n                   {/*<button className=\"service-button text-white\">Переглянути детальніше</button>*/}\r\n                   <button className=\"service-button text-black\">\r\n                       <Link to={`/service/${1}`} style={{ color: \"inherit\", textDecoration: \"none\" }}>Переглянути детальніше</Link>\r\n                   </button>\r\n               </div>\r\n\r\n               <div className=\"photo-columns\">\r\n                   <img src={block2} />\r\n               </div>\r\n\r\n           </article>\r\n           <article className=\"block-white\" style={{ backgroundImage: `url(${block3})`}}>\r\n               <div className=\"\">\r\n                   <h3>АЛЮМІНІЄВІ СВІТЛОПРОЗОРНІ КОНСТРУКЦІЇ</h3>\r\n                   <hr className=\"super-hr\"/>\r\n                   <h4>Під час зведення бізнес-центрів, розважальних закладів, держустанов люди все частіше обирають ці матеріали. Вони відрізняються хорошими експлуатаційними характеристиками, і ціна на них досить демократична.</h4>\r\n                   {/*<button className=\"service-button\">Переглянути детальніше</button>*/}\r\n                   <button className=\"service-button text-black\">\r\n                       <Link to={`/service/${2}`} style={{ color: \"inherit\", textDecoration: \"none\" }}>Переглянути детальніше</Link>\r\n                   </button>\r\n               </div>\r\n\r\n               <div className=\"photo-columns\">\r\n                   <img src={block3} />\r\n               </div>\r\n\r\n           </article>\r\n           <article className=\"block-black\" style={{ backgroundImage: `url(${block4})`}}>\r\n\r\n               <div className=\"\">\r\n                   <h3>НАВІСНІ ВЕНТИЛЮВАНІ ФАСАДИ</h3>\r\n                   <hr className=\"super-hr\"/>\r\n                   <h4>Забезпечує природну вологість повітря і постійну температуру в приміщенні створює додаткову звукоізоляцію, зменшує можливість виникнення грибків, тому навіть люди з алергією почуваються комфортно в прикрашеній вентильованими фасадами будівлі. Крім того, вентильовані фасади є ідеальним рішенням не тільки для утеплення, але і для надання будинку сучасний вигляд.</h4>\r\n                   {/*<button className=\"service-button text-white\">Переглянути детальніше</button>*/}\r\n                   <button className=\"service-button text-black\">\r\n                       <Link to={`/service/${3}`} style={{ color: \"inherit\", textDecoration: \"none\" }}>Переглянути детальніше</Link>\r\n                   </button>\r\n               </div>\r\n\r\n               <div className=\"photo-columns\">\r\n                   <img src={block4} />\r\n               </div>\r\n\r\n           </article>\r\n       </div>\r\n    );\r\n};\r\n\r\nexport default Services;","C:\\Users\\Stashchuk\\WebstormProjects\\online-store-course\\client\\src\\routes.js",[],"C:\\Users\\Stashchuk\\WebstormProjects\\online-store-course\\client\\src\\http\\index.js",[],"C:\\Users\\Stashchuk\\WebstormProjects\\online-store-course\\client\\src\\pages\\ServicePage.js",[],"C:\\Users\\Stashchuk\\WebstormProjects\\online-store-course\\client\\src\\utils\\consts.js",[],"C:\\Users\\Stashchuk\\WebstormProjects\\online-store-course\\client\\src\\pages\\Admin.js",[],"C:\\Users\\Stashchuk\\WebstormProjects\\online-store-course\\client\\src\\pages\\Basket.js",[],"C:\\Users\\Stashchuk\\WebstormProjects\\online-store-course\\client\\src\\pages\\DevicePage.js",["187"],"import React, { useEffect, useState, useContext } from 'react';\r\nimport { Button, Image, Row } from 'react-bootstrap';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\nimport { fetchOneDevice, deleteDevice } from '../http/deviceApi';\r\nimport { Context } from '../index';\r\nimport jwt_decode from 'jwt-decode';\r\nimport Lightbox from 'react-image-lightbox';\r\nimport 'react-image-lightbox/style.css';\r\n// import { Swiper, SwiperSlide } from 'swiper/react';\r\nimport 'swiper/swiper-bundle.min.css';\r\nimport '../css/DevicePage.css';\r\nimport '../css/index.css';\r\n\r\n\r\n\r\n\r\n\r\nconst DeviceCharacteristics = ({ info }) => (\r\n    <Row className=\"d-flex flex-column m-3\">\r\n        <h4>Опис проекту</h4>\r\n        {info.map((info, index) =>\r\n            <Row key={info.id} style={{ background: index % 2 === 0 ? 'lightgray' : 'transparent', padding: 10 }}>\r\n                {info.title}: {info.description}\r\n            </Row>\r\n        )}\r\n    </Row>\r\n);\r\n\r\nconst DevicePage = () => {\r\n    const [device, setDevice] = useState({ info: [] });\r\n    const [deviceImages, setDeviceImages] = useState([]);\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const [photoIndex, setPhotoIndex] = useState(0);\r\n\r\n    const { id } = useParams();\r\n    const history = useHistory();\r\n    const { user } = useContext(Context);\r\n\r\n    const token = localStorage.getItem('token');\r\n    const { role: userRole } = jwt_decode(token);\r\n\r\n    const imageUrls = deviceImages.map(img => process.env.REACT_APP_API_URL + img.imageUrl);\r\n\r\n    useEffect(() => {\r\n        fetchOneDevice(id).then(data => {\r\n            setDevice(data);\r\n            setDeviceImages(data.deviceImages || []);\r\n        });\r\n    }, []);\r\n\r\n    const handleDelete = async () => {\r\n        try {\r\n            await deleteDevice(id);\r\n            history.push('/devices');\r\n        } catch (error) {\r\n            console.error('Error deleting device:', error);\r\n        }\r\n    };\r\n\r\n    // console.log(imageUrls);\r\n\r\n\r\n    return (\r\n        <div className=\"bg-black text-light\">\r\n            <div className=\"d-flex  flex-column align-items-center\">\r\n                <h3 className=\"text-center\">{device.name}</h3>\r\n                <hr className=\"super-hr\"/>\r\n            </div>\r\n\r\n            <hr/>\r\n\r\n            {/*<Swiper*/}\r\n            {/*    spaceBetween={1}*/}\r\n            {/*    slidesPerView={7}*/}\r\n            {/*    // navigation*/}\r\n            {/*    pagination={{ clickable: true }}*/}\r\n            {/*>*/}\r\n            {/*    {deviceImages.map((img, index) => (*/}\r\n            {/*        <SwiperSlide key={index} className=\"swiper-block\">*/}\r\n            {/*            <Image*/}\r\n            {/*                className=\"swiper-image\"*/}\r\n            {/*                style={{ cursor: 'pointer',*/}\r\n            {/*                        objectFit: 'cover'*/}\r\n            {/*            }}*/}\r\n            {/*                // width={256} // Adjust the width and height as needed*/}\r\n            {/*                // height={256}*/}\r\n            {/*                src={imageUrls[index]}*/}\r\n            {/*                onClick={() => {*/}\r\n            {/*                    setIsOpen(true);*/}\r\n            {/*                    setPhotoIndex(index);*/}\r\n            {/*                }}*/}\r\n            {/*            />*/}\r\n            {/*        </SwiperSlide>*/}\r\n            {/*    ))}*/}\r\n            {/*</Swiper>*/}\r\n            <div className=\"carousel\">\r\n                <div className=\"pictures\">\r\n                    {deviceImages.map((img, index) => (\r\n                        <div key={index}>\r\n                            <Image\r\n                                style={{ cursor: 'pointer' }}\r\n                                width={100}\r\n                                height={100}\r\n                                src={imageUrls[index]}\r\n                                onClick={() => {\r\n                                    setIsOpen(true);\r\n                                    setPhotoIndex(index);\r\n                                }}\r\n                            />\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n            {isOpen && (\r\n                <Lightbox\r\n                    mainSrc={imageUrls[photoIndex]}\r\n                    nextSrc={imageUrls[(photoIndex + 1) % imageUrls.length]}\r\n                    prevSrc={imageUrls[(photoIndex + imageUrls.length - 1) % imageUrls.length]}\r\n                    onCloseRequest={() => setIsOpen(false)}\r\n                    onMovePrevRequest={() => setPhotoIndex((photoIndex + imageUrls.length - 1) % imageUrls.length)}\r\n                    onMoveNextRequest={() => setPhotoIndex((photoIndex + 1) % imageUrls.length)}\r\n                />\r\n            )}\r\n\r\n            <DeviceCharacteristics info={device.info} />\r\n\r\n            {userRole === 'ADMIN' && user.isAuth && (\r\n                <Button variant=\"danger\" onClick={handleDelete}>Видалити пристрій</Button>\r\n            )}\r\n\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DevicePage;\r\n","C:\\Users\\Stashchuk\\WebstormProjects\\online-store-course\\client\\src\\pages\\Auth.js",[],"C:\\Users\\Stashchuk\\WebstormProjects\\online-store-course\\client\\src\\pages\\Project.js",["188","189","190"],"import React, {useContext, useEffect} from 'react';\r\nimport {observer} from \"mobx-react-lite\";\r\nimport {fetchBrands, fetchDevices, fetchTypes} from \"../http/deviceApi\";\r\nimport '../css/Project.css';\r\nimport '../css/index.css';\r\nimport {Context} from \"../index\";\r\nimport BrandBar from \"../components/BrandBar\";\r\nimport DeviceList from \"../components/DeviceList\";\r\nimport Pages from \"../components/Pages\";\r\nimport BrandBarAlt from \"../components/BrandBarAlt\";\r\n\r\nconst Project = observer(() => {\r\n\r\n    const { device } = useContext(Context);  // Отримуємо доступ до стану пристроїв через контекст додатку.\r\n\r\n\r\n    useEffect(() => {\r\n        // Завантажуємо типи та бренди пристроїв при завантаженні сторінки.\r\n        fetchTypes().then(data => device.setTypes(data));\r\n        fetchBrands().then(data => device.setBrands(data));\r\n\r\n        // Завантажуємо першу сторінку пристроїв з обмеженням на кількість та встановлюємо їх у стан додатку.\r\n        fetchDevices(null, null, 1, 8).then(data => {\r\n            device.setDevices(data.rows);\r\n            device.setTotalCount(data.count);\r\n        });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        // Перевіряємо, чи вибрано бренд перед тим, як використовувати його id.\r\n        if (device.selectedBrand) {\r\n            fetchDevices(device.selectedType.id, device.selectedBrand.id, device.page, 8)\r\n                .then(data => {\r\n                    device.setDevices(data.rows);\r\n                    device.setTotalCount(data.count);\r\n                });\r\n        }\r\n    }, [device.selectedType, device.selectedBrand, device.page]);\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"bg-black d-flex justify-content-center align-items-center flex-column\">\r\n                <h3 className=\"d-flex justify-content-center bg-black text-white\">ПРОЕКТИ </h3>\r\n                <hr className=\"super-hr\"/>\r\n            </div>\r\n            <BrandBarAlt />  {/* Відображаємо компонент BrandBar для фільтрації за брендами пристроїв. */}\r\n            <DeviceList />  {/* Відображаємо компонент DeviceList для відображення списку пристроїв. */}\r\n            <Pages />  {/* Відображаємо компонент Pages для створення сторінкованого відображення списку пристроїв. */}\r\n\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default Project;","C:\\Users\\Stashchuk\\WebstormProjects\\online-store-course\\client\\src\\pages\\Shop.js",["191","192","193","194","195","196","197","198"],"import React, { useContext, useEffect } from 'react';  // Імпортуємо необхідні бібліотеки та компоненти React.\r\nimport { Col, Container, Row } from \"react-bootstrap\";  // Імпортуємо компоненти Bootstrap.\r\nimport TypeBar from \"../components/TypeBar\";  // Імпортуємо компонент TypeBar для фільтрації за типами пристроїв.\r\nimport BrandBar from \"../components/BrandBar\";  // Імпортуємо компонент BrandBar для фільтрації за брендами пристроїв.\r\nimport DeviceList from \"../components/DeviceList\";  // Імпортуємо компонент DeviceList для відображення списку пристроїв.\r\nimport { observer } from \"mobx-react-lite\";  // Імпортуємо observer для стеження за змінами стану.\r\nimport { Context } from \"../index\";  // Імпортуємо контекст додатку.\r\nimport { fetchBrands, fetchDevices, fetchTypes } from \"../http/deviceApi\";  // Імпортуємо функції для отримання даних про пристрої.\r\nimport '../css/Project.css';\r\nimport '../css/ContactForm.css';\r\nimport '../css/index.css';\r\nimport Pages from \"../components/Pages\";\r\nimport FirstScreen from \"../components/FirstScreen\";\r\nimport Services from \"../components/Services\";\r\nimport Map from \"../components/Map\";\r\nimport ContactForm from \"../components/ContactForm\";\r\nimport Footer from \"../components/Footer\";  // Імпортуємо компонент Pages для створення сторінкованого відображення списку пристроїв.\r\n\r\nconst Shop = observer(() => {\r\n    const { device } = useContext(Context);  // Отримуємо доступ до стану пристроїв через контекст додатку.\r\n\r\n    useEffect(() => {\r\n        // Завантажуємо типи та бренди пристроїв при завантаженні сторінки.\r\n        fetchTypes().then(data => device.setTypes(data));\r\n        fetchBrands().then(data => device.setBrands(data));\r\n\r\n        // Завантажуємо першу сторінку пристроїв з обмеженням на кількість та встановлюємо їх у стан додатку.\r\n        fetchDevices(null, null, 1, 8).then(data => {\r\n            device.setDevices(data.rows);\r\n            device.setTotalCount(data.count);\r\n        });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        // Перевіряємо, чи вибрано бренд перед тим, як використовувати його id.\r\n        if (device.selectedBrand) {\r\n            fetchDevices(device.selectedType.id, device.selectedBrand.id, device.page, 8)\r\n                .then(data => {\r\n                    device.setDevices(data.rows);\r\n                    device.setTotalCount(data.count);\r\n                });\r\n        }\r\n    }, [device.selectedType, device.selectedBrand, device.page]);\r\n\r\n\r\n    const handleFormSubmit = async (formData) => {\r\n        try {\r\n            const response = await fetch('https://formsubmit.co/b4adf86b709c51dd5aa0111af02af652', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(formData),\r\n            });\r\n\r\n            if (response.ok) {\r\n                alert('Message sent successfully');\r\n            } else {\r\n                const data = await response.json();\r\n                alert('Error sending message: ' + data.error);\r\n            }\r\n        } catch (error) {\r\n            console.error('There was an error sending the message', error);\r\n        }\r\n    };\r\n\r\n    return (\r\n\r\n        <div>\r\n            <FirstScreen/>\r\n            {/*<Container>*/}\r\n            <div className=\"p-4 d-flex flex-column align-items-center\">\r\n                <h3 className=\"d-flex justify-content-center text-black\">ЧИМ МИ ЗАЙМАЄМОСЬ ?</h3>\r\n                <hr className=\"super-hr\"/>\r\n                <BrandBar />  {/* Відображаємо компонент BrandBar для фільтрації за брендами пристроїв. */}\r\n            </div>\r\n                {/*    <TypeBar />  /!* Відображаємо компонент TypeBar для фільтрації за типами пристроїв. *!/*/}\r\n            <div className=\"project d-flex flex-column align-items-center\">\r\n                <h3 className=\"d-flex justify-content-center\">НАШІ ОСТАННІ ПРОЕКТИ </h3>\r\n                <hr className=\"super-hr\"/>\r\n                <DeviceList />  {/* Відображаємо компонент DeviceList для відображення списку пристроїв. */}\r\n            </div>\r\n\r\n\r\n                {/*<Pages />  /!* Відображаємо компонент Pages для створення сторінкованого відображення списку пристроїв. *!/*/}\r\n            {/*</Container>*/}\r\n            <Services/>\r\n            <Map/>\r\n            <div className=\"contact bg-black\">\r\n                <div className=\" d-flex flex-column align-items-center\">\r\n                    <h3 className=\"d-flex justify-content-center bg-black m-0 text-white\">ЗВ'ЯЖІТЬСЯ З НАМИ</h3>\r\n                    <hr className=\"super-hr\"/>\r\n                    <ContactForm onFormSubmit={handleFormSubmit} />\r\n                </div>\r\n            </div>\r\n            {/*<Footer/>*/}\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default Shop;\r\n","C:\\Users\\Stashchuk\\WebstormProjects\\online-store-course\\client\\src\\pages\\About.js",[],"C:\\Users\\Stashchuk\\WebstormProjects\\online-store-course\\client\\src\\pages\\Facilities.js",["199"],"import React from 'react';\r\nimport '../css/index.css';\r\nimport '../css/Facilities.css';\r\nimport docs from '../assets/services/google-docs.png';  // Імпортуємо зображення для відображення рейтингу.\r\nimport support from '../assets/services/support.png';  // Імпортуємо зображення для відображення рейтингу.\r\nimport portfolio from '../assets/services/portfolio.png';  // Імпортуємо зображення для відображення рейтингу.\r\nimport drill from '../assets/services/drill.png';  // Імпортуємо зображення для відображення рейтингу.\r\nimport drill1 from '../assets/services/drill1.png';  // Імпортуємо зображення для відображення рейтингу.\r\nimport image from '../assets/services/image2.png';  // Імпортуємо зображення для відображення рейтингу.\r\n\r\n\r\nconst Facilities = () => {\r\n    return (\r\n        <div>\r\n            <div className=\"services-h3\">\r\n                <h3>Послуги</h3>\r\n                <hr className=\"super-hr\"/>\r\n\r\n                    <h5>Спектр услуг предоставляемый компанией ООО «Кронк Строй»</h5>\r\n            </div>\r\n\r\n\r\n            <section className=\"service\">\r\n\r\n\r\n                <div className=\"exist\">\r\n                    <img src={docs} alt=\"\"/>\r\n                        <h4>\r\n                            Составление технической и проектной документации\r\n                            <hr className=\"super-hr\"/>\r\n                        </h4>\r\n                </div>\r\n\r\n                <div className=\"exist\">\r\n                    <img src={drill} alt=\"\"/>\r\n                        <h4>\r\n                            Монтаж алюминиевой (нержавеющей) подсистемы\r\n                            <hr className=\"super-hr\"/>\r\n                        </h4>\r\n                </div>\r\n\r\n                <div className=\"exist\">\r\n                    <img src={support} alt=\"\"/>\r\n                        <h4>\r\n                            Монтаж минеральной ваты, базальта и т.п.\r\n                            <hr className=\"super-hr\"/>\r\n                        </h4>\r\n                </div>\r\n\r\n                <div className=\"exist\">\r\n                    <img src={drill1} alt=\"\"/>\r\n                        <h4>\r\n                            Монтаж АКП, керамогранита, HPL панелей, Кортен стали\r\n                            <hr className=\"super-hr\"/>\r\n                        </h4>\r\n                </div>\r\n\r\n                <div className=\"exist\">\r\n                    <img src={portfolio} alt=\"\"/>\r\n                        <h4>\r\n                            Разработка и монтаж светопрозрачных конструкций\r\n                            <hr className=\"super-hr\"/>\r\n                        </h4>\r\n                </div>\r\n\r\n                <div className=\"exist\">\r\n                    <img src={portfolio} alt=\"\"/>\r\n                        <h4>\r\n                            Разработка и монтаж рекламных конструкций\r\n                            <hr className=\"super-hr\"/>\r\n                        </h4>\r\n                </div>\r\n\r\n                <div className=\"exist\">\r\n                    <img src={drill} alt=\"\"/>\r\n                        <h4>\r\n                            Монтаж электрооборудования и освещения\r\n                            <hr className=\"super-hr\"/>\r\n                        </h4>\r\n                </div>\r\n\r\n                <div className=\"exist\">\r\n                    <img src={drill1} alt=\"\"/>\r\n                        <h4>\r\n                            Монтаж фасадов из Кортен стали\r\n                            <hr className=\"super-hr\"/>\r\n                        </h4>\r\n                </div>\r\n\r\n            </section>\r\n\r\n            <section className=\"about\">\r\n                <div className=\"aboutbg\">\r\n\r\n                    <h4>Данный список услуг далеко не полный, и большое спасибо всем кому было интересно дочитать этот\r\n                        перечень хотя бы до середины. Просто обычно любой человек, читает только до того места где\r\n                        находит то, что подходит именно ему. Да, и сами мы так поступаем.\r\n                    </h4>\r\n\r\n                    <h4>Компания «Кронк Строй» готова приступить к разным задачам, и находить решение даже в ситуациях,\r\n                        которые могут показаться нерешаемыми. Многолетний опыт работы в сфере Вент Фасадов дает нам\r\n                        возможность найти решение в самых сложных ситуациях, а наши клиенты всегда остаются,\r\n                        удовлетворены нашим сотрудничеством. Словом: довольный заказчик – радость для нашей компании.\r\n                    </h4>\r\n\r\n                    <h4>Обращайтесь, даже если не нашли в этом списке того, что бы Вам хотелось реализовать у себя на\r\n                        фасаде. А мы постараемся воплотить все Ваши запросы в жизнь.\r\n                    </h4>\r\n\r\n                    <h4>С уважением, компания ООО «Кронк Строй».\r\n                    </h4>\r\n\r\n                </div>\r\n\r\n            </section>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Facilities;","C:\\Users\\Stashchuk\\WebstormProjects\\online-store-course\\client\\src\\pages\\Contact.js",[],"C:\\Users\\Stashchuk\\WebstormProjects\\online-store-course\\client\\src\\components\\BrandBarAlt.js",["200","201","202","203","204"],"import React, {useContext, useEffect, useRef} from 'react';  // Імпортуємо необхідні бібліотеки та модулі React.\r\nimport { observer } from \"mobx-react-lite\";  // Імпортуємо бібліотеку для створення спостерігачів MobX.\r\nimport { Context } from \"../index\";  // Імпортуємо контекст додатка з кореневого файлу.\r\nimport {Button, Card, Row} from \"react-bootstrap\";  // Імпортуємо компоненти Bootstrap для створення карток та рядків.\r\nimport '../css/BrandBar.css';\r\nimport '../css/index.css';\r\n\r\nconst BrandBarAlt = observer(() => {\r\n    const { device } = useContext(Context);  // Отримуємо дані про бренди та вибраний бренд з контексту додатка.\r\n\r\n    // Function to handle showing all devices.\r\n    const showAllDevices = () => {\r\n        device.setSelectedType({}); // Clear selected type to show all devices.\r\n        device.setSelectedBrand({}); // Clear selected brand to show all devices.\r\n    };\r\n\r\n    const buttonRef = useRef(null);\r\n\r\n    // 2. Встановіть фокус на кнопку, коли компонент вставлено\r\n    // useEffect(() => {\r\n    //     buttonRef.current.focus();\r\n    // }, []);\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"brand-bar-alt\">\r\n            <button\r\n                className={device.selectedBrand.id ? \"passive-button\" : \"active-button\"}\r\n                onClick={showAllDevices}\r\n            >\r\n                Всі проекти\r\n            </button>\r\n            {device.brands.map(brand =>\r\n                <button\r\n                    key={brand.id}\r\n                    className={brand.id === device.selectedBrand.id ? \"active-button\" : \"passive-button\"}\r\n                    onClick={() => device.setSelectedBrand(brand)}\r\n                >\r\n                    {brand.name}\r\n                </button>\r\n            )}\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default BrandBarAlt;  // Експортуємо компонент BrandBar для використання в інших частинах програми.\r\n","C:\\Users\\Stashchuk\\WebstormProjects\\online-store-course\\client\\src\\components\\ContactForm.js",[],"C:\\Users\\Stashchuk\\WebstormProjects\\online-store-course\\client\\src\\components\\modals\\DeleteType.js",[],"C:\\Users\\Stashchuk\\WebstormProjects\\online-store-course\\client\\src\\components\\modals\\CreateBrand.js",["205","206","207","208","209","210"],"import React, { useState } from 'react';  // Імпортуємо необхідні бібліотеки та модулі React.\r\nimport { Button, Form, Modal } from \"react-bootstrap\";  // Імпортуємо компоненти Bootstrap для створення модального вікна.\r\nimport { createBrand } from \"../../http/deviceApi\";  // Імпортуємо функцію для створення бренду з сервера.\r\n\r\nconst CreateBrand = ({ show, onHide }) => {\r\n    const [value, setValue] = useState('');  // Встановлюємо початковий стан для поля вводу назви бренду.\r\n\r\n    const addBrand = () => {  // Функція для додавання нового бренду.\r\n        createBrand({ name: value }).then(data => {  // Викликаємо функцію createBrand з передачею об'єкта {name: value} на сервер.\r\n            setValue('');  // Очищаємо поле вводу після успішного додавання бренду.\r\n            onHide();  // Сховати модальне вікно після додавання бренду.\r\n        });\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            show={show}  // Властивість, яка вказує, чи відображати модальне вікно, передане з батьківського компонента.\r\n            onHide={onHide}  // Функція, яка буде викликана при закритті модального вікна.\r\n            centered  // Вікно буде центровано на екрані.\r\n        >\r\n            <Modal.Header closeButton>  // Верхній блок модального вікна з кнопкою закриття.\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">  // Заголовок модального вікна.\r\n                    Додати бренд\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>  // Основна частина модального вікна, де розміщується форма для введення назви бренду.\r\n                <Form>\r\n                    <Form.Control\r\n                        value={value}  // Поточне значення поля вводу, яке відображається на екрані.\r\n                        onChange={e => setValue(e.target.value)}  // Функція для оновлення значення поля вводу при зміні вмісту.\r\n                        placeholder={\"Введіть назву бренду\"}  // Плейсхолдер, який відображається у полі вводу.\r\n                    />\r\n                </Form>\r\n            </Modal.Body>\r\n            <Modal.Footer>  // Нижній блок модального вікна з кнопками.\r\n                <Button variant={\"variant-danger\"} onClick={onHide}>Закрити</Button>  // Кнопка для закриття модального вікна.\r\n                <Button variant={\"variant-success\"} onClick={addBrand}>Додати</Button>  // Кнопка для додавання бренду.\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default CreateBrand;  // Експортуємо компонент CreateBrand для використання в інших частинах програми.\r\n","C:\\Users\\Stashchuk\\WebstormProjects\\online-store-course\\client\\src\\components\\modals\\CreateDevice.js",["211","212","213","214"],"import React, { useContext, useEffect, useState } from 'react';  // Імпортуємо необхідні бібліотеки та модулі React.\r\nimport { Button, Col, Dropdown, Form, Modal, Row } from \"react-bootstrap\";  // Імпортуємо компоненти Bootstrap для створення модального вікна та інших елементів інтерфейсу.\r\nimport { Context } from \"../../index\";  // Імпортуємо контекст додатка з кореневого файлу.\r\nimport DropdownToggle from \"react-bootstrap/DropdownToggle\";  // Імпортуємо компоненти Bootstrap для роботи з випадаючим списком.\r\nimport DropdownMenu from \"react-bootstrap/DropdownMenu\";\r\nimport { createDevice, fetchBrands, fetchDevices, fetchTypes } from \"../../http/deviceApi\";  // Імпортуємо функції для взаємодії з сервером.\r\nimport { observer } from \"mobx-react-lite\";  // Імпортуємо бібліотеку для створення спостерігачів MobX.\r\nimport { values } from \"mobx\";  // Імпортуємо функції для роботи з MobX.\r\n\r\nconst CreateDevice = observer(({ show, onHide }) => {\r\n    const { device } = useContext(Context);  // Отримуємо дані з контексту додатка.\r\n\r\n    // Створюємо стани для різних полів вводу та даних про пристрій.\r\n    const [name, setName] = useState('');\r\n    const [price, setPrice] = useState(0);\r\n    const [files, setFiles] = useState([]);\r\n    const [file, setFile] = useState(null)\r\n    const [info, setInfo] = useState([]);\r\n\r\n    useEffect(() => {\r\n        // Викликаємо функції для завантаження списків типів та брендів при завантаженні компонента.\r\n        fetchTypes().then(data => device.setTypes(data));\r\n        fetchBrands().then(data => device.setBrands(data));\r\n    }, []);\r\n\r\n    const addInfo = () => {\r\n        // Додаємо новий об'єкт з інформацією про властивість до масиву info.\r\n        setInfo([...info, { title: '', description: '', number: Date.now() }]);\r\n    };\r\n\r\n    const removeInfo = (number) => {\r\n        // Видаляємо об'єкт з інформацією про властивість з масиву info за номером.\r\n        setInfo(info.filter(i => i.number !== number));\r\n    };\r\n\r\n    const changeInfo = (key, value, number) => {\r\n        // Змінюємо значення властивості об'єкта в масиві info за номером та ключем.\r\n        setInfo(info.map(i => i.number === number ? { ...i, [key]: value } : i));\r\n    };\r\n\r\n    const selectFiles = e => {\r\n        // Перевірка, чи `e.target.files` є масивом\r\n        if (e.target.files && e.target.files.length > 0) {\r\n            // Додаємо вибрані файли до масиву files.\r\n            setFiles(Array.from(e.target.files));\r\n        }\r\n    };\r\n\r\n    const selectFile = e => {\r\n        setFile(e.target.files[0])\r\n    }\r\n\r\n    const addDevice = () => {\r\n        const formData = new FormData();\r\n        formData.append('name', name);\r\n        formData.append('price', `${price}`);\r\n        formData.append('img', file)\r\n        formData.append('brandId', device.selectedBrand.id);\r\n        formData.append('typeId', device.selectedType.id);\r\n        formData.append('info', JSON.stringify(info));\r\n\r\n        // Додаємо всі вибрані файли в FormData.\r\n        for (const file of files) {\r\n            formData.append('images', file);\r\n        }\r\n\r\n        createDevice(formData).then(data => onHide());\r\n    };\r\n\r\n    return (\r\n        <Modal\r\n            show={show}  // Властивість, яка вказує, чи відображати модальне вікно, передане з батьківського компонента.\r\n            onHide={onHide}  // Функція, яка буде викликана при закритті модального вікна.\r\n            centered  // Вікно буде центровано на екрані.\r\n        >\r\n            <Modal.Header closeButton>\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    Додати проект\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <Form>\r\n                    {/* Випадаючий список для вибору типу пристрою */}\r\n                    <Dropdown className=\"mt-2 mb-2\">\r\n                        <DropdownToggle>{device.selectedType.name || \"Виберіть фільтрацію\"}</DropdownToggle>\r\n                        <DropdownMenu>\r\n                            {device.types.map(type =>\r\n                                <Dropdown.Item\r\n                                    onClick={() => device.setSelectedType(type)}\r\n                                    key={type.id}\r\n                                >\r\n                                    {type.name}\r\n                                </Dropdown.Item>\r\n                            )}\r\n                        </DropdownMenu>\r\n                    </Dropdown>\r\n\r\n                    {/* Випадаючий список для вибору бренду пристрою */}\r\n                    <Dropdown className=\"mt-2 mb-2\">\r\n                        <DropdownToggle>{device.selectedBrand.name || \"Виберіть вид\"}</DropdownToggle>\r\n                        <DropdownMenu>\r\n                            {device.brands.map(brand =>\r\n                                <Dropdown.Item\r\n                                    onClick={() => device.setSelectedBrand(brand)}\r\n                                    key={brand.id}\r\n                                >\r\n                                    {brand.name}\r\n                                </Dropdown.Item>\r\n                            )}\r\n                        </DropdownMenu>\r\n                    </Dropdown>\r\n\r\n                    <Form.Control\r\n                        value={name}\r\n                        onChange={e => setName(e.target.value)}\r\n                        className=\"mt-3\"\r\n                        placeholder=\"Введіть назву проекта\"\r\n                    />\r\n                    {/*<Form.Control*/}\r\n                    {/*    value={price}*/}\r\n                    {/*    onChange={e => setPrice(Number(e.target.value))}*/}\r\n                    {/*    className=\"mt-3\"*/}\r\n                    {/*    placeholder=\"Введіть вартість пристрою\"*/}\r\n                    {/*    type=\"number\"*/}\r\n                    {/*/>*/}\r\n                    <h5>Фото титула</h5>\r\n                    <Form.Control\r\n                        className=\"mt-3\"\r\n                        type=\"file\"\r\n                        onChange={selectFile}\r\n                    />\r\n                    <hr/>\r\n                    <h5>Всі фото</h5>\r\n                    <Form.Control\r\n                        className=\"mt-3\"\r\n                        type=\"file\"\r\n                        multiple  // Дозволяє вибирати більше одного файлу\r\n                        onChange={selectFiles}\r\n                    />\r\n                    <hr />\r\n\r\n                    {/* Кнопка для додавання нової властивості */}\r\n                    <Button\r\n                        variant=\"outline-dark\"\r\n                        onClick={addInfo}\r\n                    >\r\n                        Додати опис проекта\r\n                    </Button>\r\n\r\n                    {/* Відображення списку властивостей пристрою */}\r\n                    {info.map(i =>\r\n                        <Row className=\"mt-4\" key={i.number}>\r\n                            <Col md={4}>\r\n                                <Form.Control\r\n                                    value={i.title}\r\n                                    onChange={(e) => changeInfo('title', e.target.value, i.number)}\r\n                                    placeholder=\"Введіть назву властивості\"\r\n                                />\r\n                            </Col>\r\n                            <Col md={4}>\r\n                                <Form.Control\r\n                                    value={i.description}\r\n                                    onChange={(e) => changeInfo('description', e.target.value, i.number)}\r\n                                    placeholder=\"Введіть опис властивості\"\r\n                                />\r\n                            </Col>\r\n                            <Col md={4}>\r\n                                {/* Кнопка для видалення властивості */}\r\n                                <Button\r\n                                    onClick={() => removeInfo(i.number)}\r\n                                    variant=\"outline-danger\"\r\n                                >\r\n                                    Видалити\r\n                                </Button>\r\n                            </Col>\r\n                        </Row>\r\n                    )}\r\n                </Form>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                {/* Кнопка для закриття модального вікна */}\r\n                <Button variant=\"variant-danger\" onClick={onHide}>Закрити</Button>\r\n                {/* Кнопка для додавання пристрою */}\r\n                <Button variant=\"variant-success\" onClick={addDevice}>Додати</Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n});\r\n\r\nexport default CreateDevice;  // Експортуємо компонент CreateDevice для використання в інших частинах програми.\r\n","C:\\Users\\Stashchuk\\WebstormProjects\\online-store-course\\client\\src\\components\\modals\\CreateType.js",[],"C:\\Users\\Stashchuk\\WebstormProjects\\online-store-course\\client\\src\\components\\Map.js",["215"],"import React from 'react';\r\n\r\nconst Map = () => {\r\n    return (\r\n        <div className=\"m-0\">\r\n            <iframe\r\n                src=\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d2644.644311859089!2d34.9980154160544!3d48.48253577925242!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x40dbe248adcbfe23%3A0xfc859195fe5b6fe8!2z0YPQuy4g0JDQutCw0LTQtdC80LjQutCwINCR0LXQu9C10LvRjtCx0YHQutC-0LPQviwgNTTQsCwg0JTQvdC40L_RgNC-LCDQlNC90LXQv9GA0L7Qv9C10YLRgNC-0LLRgdC60LDRjyDQvtCx0LvQsNGB0YLRjCwgNDkwMDA!5e0!3m2!1sru!2sua!4v1639591844805!5m2!1sru!2sua\"\r\n                width=\"100%\"\r\n                height=\"500px\"\r\n                style={{ border: 0 }}  // Передаємо стилі як об'єкт\r\n                allowFullScreen=\"\"\r\n                loading=\"lazy\">\r\n            </iframe>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Map;","C:\\Users\\Stashchuk\\WebstormProjects\\online-store-course\\client\\src\\http\\deviceApi.js",[],"C:\\Users\\Stashchuk\\WebstormProjects\\online-store-course\\client\\src\\components\\Pages.js",[],"C:\\Users\\Stashchuk\\WebstormProjects\\online-store-course\\client\\src\\components\\DeviceList.js",["216"],"import React, { useContext } from 'react';  // Імпортуємо необхідні бібліотеки та модулі React.\r\nimport { observer } from \"mobx-react-lite\";  // Імпортуємо бібліотеку для створення спостерігачів MobX.\r\nimport { Context } from \"../index\";  // Імпортуємо контекст додатка з кореневого файлу.\r\nimport { Row } from \"react-bootstrap\";  // Імпортуємо компоненти Bootstrap для створення рядків.\r\nimport DeviceItem from \"./DeviceItem\";  // Імпортуємо компонент DeviceItem для відображення окремих пристроїв.\r\nimport '../css/Project.css';\r\nimport '../css/index.css';\r\n\r\nconst DeviceList = observer(() => {\r\n    const { device } = useContext(Context);  // Отримуємо дані про пристрої з контексту додатка.\r\n\r\n    return (\r\n        <div className=\"device-list cont\">\r\n\r\n            {/* Мапимо масив пристроїв та створюємо окремий компонент DeviceItem для кожного пристрою */}\r\n            {device.devices.map(device =>\r\n                <DeviceItem key={device.id} device={device} />  /* Встановлюємо унікальний ключ та передаємо дані про пристрій */\r\n                )}\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default DeviceList;  // Експортуємо компонент DeviceList для використання в інших частинах програми.\r\n","C:\\Users\\Stashchuk\\WebstormProjects\\online-store-course\\client\\src\\components\\BrandBar.js",["217","218","219","220","221"],"import React, {useContext, useEffect, useRef} from 'react';  // Імпортуємо необхідні бібліотеки та модулі React.\r\nimport { observer } from \"mobx-react-lite\";  // Імпортуємо бібліотеку для створення спостерігачів MobX.\r\nimport { Context } from \"../index\";  // Імпортуємо контекст додатка з кореневого файлу.\r\nimport {Button, Card, Row} from \"react-bootstrap\";  // Імпортуємо компоненти Bootstrap для створення карток та рядків.\r\nimport '../css/BrandBar.css';\r\nimport '../css/index.css';\r\n\r\nconst BrandBar = observer(() => {\r\n    const { device } = useContext(Context);  // Отримуємо дані про бренди та вибраний бренд з контексту додатка.\r\n\r\n    // Function to handle showing all devices.\r\n    const showAllDevices = () => {\r\n        device.setSelectedType({}); // Clear selected type to show all devices.\r\n        device.setSelectedBrand({}); // Clear selected brand to show all devices.\r\n    };\r\n\r\n    const buttonRef = useRef(null);\r\n\r\n    // 2. Встановіть фокус на кнопку, коли компонент вставлено\r\n    // useEffect(() => {\r\n    //     buttonRef.current.focus();\r\n    // }, []);\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"brand-bar\">\r\n            <button\r\n                className={device.selectedBrand.id ? \"passive-button\" : \"active-button\"}\r\n                onClick={showAllDevices}\r\n            >\r\n                Всі проекти\r\n            </button>\r\n            {device.brands.map(brand =>\r\n                <button\r\n                    key={brand.id}\r\n                    className={brand.id === device.selectedBrand.id ? \"active-button\" : \"passive-button\"}\r\n                    onClick={() => device.setSelectedBrand(brand)}\r\n                >\r\n                    {brand.name}\r\n                </button>\r\n            )}\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default BrandBar;  // Експортуємо компонент BrandBar для використання в інших частинах програми.\r\n","C:\\Users\\Stashchuk\\WebstormProjects\\online-store-course\\client\\src\\components\\TypeBar.js",[],"C:\\Users\\Stashchuk\\WebstormProjects\\online-store-course\\client\\src\\components\\DeviceItem.js",["222","223","224","225","226"],"import React from 'react';  // Імпортуємо бібліотеку React для створення компонентів.\r\nimport { Card, Col, Image } from \"react-bootstrap\";  // Імпортуємо компоненти Bootstrap для створення карток та колонок.\r\nimport star from '../assets/star.png';  // Імпортуємо зображення зірки для рейтингу.\r\nimport { useHistory } from \"react-router-dom\";  // Імпортуємо функцію для роботи з історією браузера.\r\nimport { DEVICE_ROUTE } from \"../utils/consts\";  // Імпортуємо константу DEVICE_ROUTE з файлу consts.js.\r\nimport '../css/Project.css';\r\n\r\nconst DeviceItem = ({ device }) => {\r\n    const history = useHistory();  // Отримуємо історію браузера для переходу до сторінки пристрою.\r\n\r\n    return (\r\n        <div className=\"device-item\" onClick={() => history.push(DEVICE_ROUTE + '/' + device.id)}>\r\n            {/* Картка пристрою */}\r\n                <div className=\"device-img\">\r\n                    <img href=\"#\" src={process.env.REACT_APP_API_URL + device.img} />\r\n                </div>\r\n            {/* Зображення пристрою */}\r\n\r\n                {/* Інформація про пристрій (назва та рейтинг) */}\r\n\r\n                    <p>{device.name}</p>  {/* Тут може бути ім'я бренду або інша інформація. */}\r\n\r\n                    <hr className=\"project-hr\"/>\r\n\r\n                {/* Назва пристрою */}\r\n                {/*<div>{device.name}</div>*/}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DeviceItem;  // Експортуємо компонент DeviceItem для використання в інших частинах програми.\r\n",{"ruleId":"227","severity":1,"message":"228","line":4,"column":8,"nodeType":"229","messageId":"230","endLine":4,"endColumn":14},{"ruleId":"227","severity":1,"message":"231","line":9,"column":8,"nodeType":"229","messageId":"230","endLine":9,"endColumn":19},{"ruleId":"227","severity":1,"message":"232","line":14,"column":12,"nodeType":"229","messageId":"230","endLine":14,"endColumn":19},{"ruleId":"233","severity":1,"message":"234","line":22,"column":8,"nodeType":"235","endLine":22,"endColumn":10,"suggestions":"236"},{"ruleId":"237","severity":1,"message":"238","line":9,"column":13,"nodeType":"239","endLine":11,"endColumn":15},{"ruleId":"227","severity":1,"message":"240","line":4,"column":9,"nodeType":"229","messageId":"230","endLine":4,"endColumn":15},{"ruleId":"227","severity":1,"message":"241","line":4,"column":17,"nodeType":"229","messageId":"230","endLine":4,"endColumn":21},{"ruleId":"227","severity":1,"message":"242","line":4,"column":23,"nodeType":"229","messageId":"230","endLine":4,"endColumn":34},{"ruleId":"227","severity":1,"message":"243","line":4,"column":49,"nodeType":"229","messageId":"230","endLine":4,"endColumn":60},{"ruleId":"227","severity":1,"message":"244","line":5,"column":8,"nodeType":"229","messageId":"230","endLine":5,"endColumn":15},{"ruleId":"227","severity":1,"message":"245","line":11,"column":5,"nodeType":"229","messageId":"230","endLine":11,"endColumn":16},{"ruleId":"246","severity":1,"message":"247","line":40,"column":21,"nodeType":"239","endLine":40,"endColumn":74},{"ruleId":"246","severity":1,"message":"247","line":41,"column":21,"nodeType":"239","endLine":41,"endColumn":75},{"ruleId":"246","severity":1,"message":"247","line":42,"column":21,"nodeType":"239","endLine":42,"endColumn":78},{"ruleId":"246","severity":1,"message":"247","line":43,"column":21,"nodeType":"239","endLine":43,"endColumn":80},{"ruleId":"246","severity":1,"message":"247","line":44,"column":21,"nodeType":"239","endLine":44,"endColumn":77},{"ruleId":"227","severity":1,"message":"240","line":2,"column":9,"nodeType":"229","messageId":"230","endLine":2,"endColumn":15},{"ruleId":"237","severity":1,"message":"238","line":28,"column":20,"nodeType":"239","endLine":28,"endColumn":39},{"ruleId":"237","severity":1,"message":"238","line":45,"column":20,"nodeType":"239","endLine":45,"endColumn":40},{"ruleId":"237","severity":1,"message":"238","line":61,"column":20,"nodeType":"239","endLine":61,"endColumn":40},{"ruleId":"237","severity":1,"message":"238","line":78,"column":20,"nodeType":"239","endLine":78,"endColumn":40},{"ruleId":"233","severity":1,"message":"248","line":49,"column":8,"nodeType":"235","endLine":49,"endColumn":10,"suggestions":"249"},{"ruleId":"227","severity":1,"message":"250","line":7,"column":8,"nodeType":"229","messageId":"230","endLine":7,"endColumn":16},{"ruleId":"233","severity":1,"message":"251","line":27,"column":8,"nodeType":"235","endLine":27,"endColumn":10,"suggestions":"252"},{"ruleId":"233","severity":1,"message":"251","line":38,"column":8,"nodeType":"235","endLine":38,"endColumn":64,"suggestions":"253"},{"ruleId":"227","severity":1,"message":"254","line":2,"column":10,"nodeType":"229","messageId":"230","endLine":2,"endColumn":13},{"ruleId":"227","severity":1,"message":"255","line":2,"column":15,"nodeType":"229","messageId":"230","endLine":2,"endColumn":24},{"ruleId":"227","severity":1,"message":"256","line":2,"column":26,"nodeType":"229","messageId":"230","endLine":2,"endColumn":29},{"ruleId":"227","severity":1,"message":"257","line":3,"column":8,"nodeType":"229","messageId":"230","endLine":3,"endColumn":15},{"ruleId":"227","severity":1,"message":"258","line":12,"column":8,"nodeType":"229","messageId":"230","endLine":12,"endColumn":13},{"ruleId":"227","severity":1,"message":"259","line":17,"column":8,"nodeType":"229","messageId":"230","endLine":17,"endColumn":14},{"ruleId":"233","severity":1,"message":"251","line":32,"column":8,"nodeType":"235","endLine":32,"endColumn":10,"suggestions":"260"},{"ruleId":"233","severity":1,"message":"251","line":43,"column":8,"nodeType":"235","endLine":43,"endColumn":64,"suggestions":"261"},{"ruleId":"227","severity":1,"message":"262","line":9,"column":8,"nodeType":"229","messageId":"230","endLine":9,"endColumn":13},{"ruleId":"227","severity":1,"message":"263","line":1,"column":28,"nodeType":"229","messageId":"230","endLine":1,"endColumn":37},{"ruleId":"227","severity":1,"message":"240","line":4,"column":9,"nodeType":"229","messageId":"230","endLine":4,"endColumn":15},{"ruleId":"227","severity":1,"message":"264","line":4,"column":17,"nodeType":"229","messageId":"230","endLine":4,"endColumn":21},{"ruleId":"227","severity":1,"message":"256","line":4,"column":23,"nodeType":"229","messageId":"230","endLine":4,"endColumn":26},{"ruleId":"227","severity":1,"message":"265","line":17,"column":11,"nodeType":"229","messageId":"230","endLine":17,"endColumn":20},{"ruleId":"266","severity":1,"message":"267","line":21,"column":39,"nodeType":"268","messageId":"269","endLine":22,"endColumn":17},{"ruleId":"266","severity":1,"message":"267","line":22,"column":65,"nodeType":"268","messageId":"269","endLine":24,"endColumn":17},{"ruleId":"266","severity":1,"message":"267","line":26,"column":25,"nodeType":"268","messageId":"269","endLine":27,"endColumn":17},{"ruleId":"266","severity":1,"message":"267","line":35,"column":27,"nodeType":"268","messageId":"269","endLine":36,"endColumn":17},{"ruleId":"266","severity":1,"message":"267","line":36,"column":85,"nodeType":"268","messageId":"269","endLine":37,"endColumn":17},{"ruleId":"266","severity":1,"message":"267","line":37,"column":87,"nodeType":"268","messageId":"269","endLine":38,"endColumn":13},{"ruleId":"227","severity":1,"message":"270","line":6,"column":37,"nodeType":"229","messageId":"230","endLine":6,"endColumn":49},{"ruleId":"227","severity":1,"message":"271","line":8,"column":10,"nodeType":"229","messageId":"230","endLine":8,"endColumn":16},{"ruleId":"227","severity":1,"message":"272","line":15,"column":19,"nodeType":"229","messageId":"230","endLine":15,"endColumn":27},{"ruleId":"233","severity":1,"message":"251","line":24,"column":8,"nodeType":"235","endLine":24,"endColumn":10,"suggestions":"273"},{"ruleId":"274","severity":1,"message":"275","line":6,"column":13,"nodeType":"239","endLine":12,"endColumn":32},{"ruleId":"227","severity":1,"message":"256","line":4,"column":10,"nodeType":"229","messageId":"230","endLine":4,"endColumn":13},{"ruleId":"227","severity":1,"message":"263","line":1,"column":28,"nodeType":"229","messageId":"230","endLine":1,"endColumn":37},{"ruleId":"227","severity":1,"message":"240","line":4,"column":9,"nodeType":"229","messageId":"230","endLine":4,"endColumn":15},{"ruleId":"227","severity":1,"message":"264","line":4,"column":17,"nodeType":"229","messageId":"230","endLine":4,"endColumn":21},{"ruleId":"227","severity":1,"message":"256","line":4,"column":23,"nodeType":"229","messageId":"230","endLine":4,"endColumn":26},{"ruleId":"227","severity":1,"message":"265","line":17,"column":11,"nodeType":"229","messageId":"230","endLine":17,"endColumn":20},{"ruleId":"227","severity":1,"message":"264","line":2,"column":10,"nodeType":"229","messageId":"230","endLine":2,"endColumn":14},{"ruleId":"227","severity":1,"message":"254","line":2,"column":16,"nodeType":"229","messageId":"230","endLine":2,"endColumn":19},{"ruleId":"227","severity":1,"message":"276","line":2,"column":21,"nodeType":"229","messageId":"230","endLine":2,"endColumn":26},{"ruleId":"227","severity":1,"message":"277","line":3,"column":8,"nodeType":"229","messageId":"230","endLine":3,"endColumn":12},{"ruleId":"237","severity":1,"message":"238","line":15,"column":21,"nodeType":"239","endLine":15,"endColumn":86},"no-unused-vars","'NavBar' is defined but never used.","Identifier","unusedVar","'FirstScreen' is defined but never used.","'loading' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.","ArrayExpression",["278"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Button' is defined but never used.","'Form' is defined but never used.","'FormControl' is defined but never used.","'NavDropdown' is defined but never used.","'bigStar' is defined but never used.","'LOGIN_ROUTE' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["279"],"'BrandBar' is defined but never used.","React Hook useEffect has a missing dependency: 'device'. Either include it or remove the dependency array.",["280"],["281"],"'Col' is defined but never used.","'Container' is defined but never used.","'Row' is defined but never used.","'TypeBar' is defined but never used.","'Pages' is defined but never used.","'Footer' is defined but never used.",["282"],["283"],"'image' is defined but never used.","'useEffect' is defined but never used.","'Card' is defined but never used.","'buttonRef' is assigned a value but never used.","react/jsx-no-comment-textnodes","Comments inside children section of tag should be placed inside braces","Literal","putCommentInBraces","'fetchDevices' is defined but never used.","'values' is defined but never used.","'setPrice' is assigned a value but never used.",["284"],"jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","'Image' is defined but never used.","'star' is defined but never used.",{"desc":"285","fix":"286"},{"desc":"287","fix":"288"},{"desc":"289","fix":"290"},{"desc":"291","fix":"292"},{"desc":"289","fix":"293"},{"desc":"291","fix":"294"},{"desc":"289","fix":"295"},"Update the dependencies array to be: [user]",{"range":"296","text":"297"},"Update the dependencies array to be: [id]",{"range":"298","text":"299"},"Update the dependencies array to be: [device]",{"range":"300","text":"301"},"Update the dependencies array to be: [device.selectedType, device.selectedBrand, device.page, device]",{"range":"302","text":"303"},{"range":"304","text":"301"},{"range":"305","text":"303"},{"range":"306","text":"301"},[1321,1323],"[user]",[1685,1687],"[id]",[1108,1110],"[device]",[1526,1582],"[device.selectedType, device.selectedBrand, device.page, device]",[1971,1973],[2389,2445],[1581,1583]]